# MySQL 数据库变更监控配置
# 专注于数据变更监控的轻量级配置

# ==============================================
# 数据库连接配置
# ==============================================
mysql:
  host: localhost
  port: 3306
  user: change_monitor
  password: "change_monitor_password"
  database: mysql

# ==============================================
# 监控配置
# ==============================================
monitoring:
  # 要监控的数据库列表
  databases: 
    - production
    - staging
  
  # 要监控的表 (支持通配符 *)
  tables:
    - users
    - orders
    - products
    - payments
    - "*_audit"
  
  # 排除的表
  exclude_tables:
    - logs
    - temp_*
    - cache_*
    - session_*
    - test_*

# ==============================================
# Binary Log 收集器配置
# ==============================================
collectors:
  binary_log:
    enabled: true
    server_id: 100
    resume_stream: true
    blocking: true

# ==============================================
# 存储配置
# ==============================================
storage:
  # 存储类型: file, mysql, sqlite
  type: sqlite
  
  # SQLite存储配置
  sqlite:
    database_file: data/changes.db
    
  # MySQL存储配置（可选）
  mysql:
    host: localhost
    port: 3306
    database: change_monitor
    user: change_monitor
    password: "change_monitor_password"
  
  # 数据保留策略
  retention:
    days: 30  # 保留30天的变更记录

# ==============================================
# 告警配置
# ==============================================
alerts:
  # 关键表变更立即告警
  critical_tables:
    - users
    - orders
    - payments
  
  # 大批量操作告警阈值
  bulk_threshold: 1000
  
  # 邮件告警配置
  email:
    enabled: false
    smtp_server: smtp.company.com
    smtp_port: 587
    use_tls: true
    username: "alerts@company.com"
    password: "email_password"
    recipients:
      - admin@company.com
      - dba@company.com
    subject_prefix: "[MySQL变更]"
  
  # Webhook告警配置
  webhook:
    enabled: false
    url: "https://hooks.company.com/mysql-changes"
    timeout: 30
    headers:
      Authorization: "Bearer your_token_here"

# ==============================================
# Web界面配置
# ==============================================
web:
  enabled: true
  host: 0.0.0.0
  port: 8080
  debug: false
  
  # 基础认证（可选）
  auth:
    enabled: false
    username: admin
    password: admin123

# ==============================================
# 日志配置
# ==============================================
logging:
  level: INFO  # DEBUG, INFO, WARNING, ERROR
  file: logs/monitor.log
  max_size: 100MB
  backup_count: 5
  
  # 控制台输出
  console: true
  
  # 变更日志单独记录
  change_log:
    enabled: true
    file: logs/changes.log

# ==============================================
# 性能配置
# ==============================================
performance:
  # 批量处理大小
  batch_size: 100
  
  # 处理队列大小
  queue_size: 1000
  
  # 统计更新间隔（秒）
  stats_interval: 30

# ==============================================
# 规则配置
# ==============================================
rules:
  # 删除操作告警
  - name: "删除操作监控"
    condition: "operation_type == 'DELETE'"
    alert: true
    priority: high
    
  # DDL操作告警
  - name: "结构变更监控"
    condition: "operation_type == 'DDL'"
    alert: true
    priority: critical
    
  # 大批量更新告警
  - name: "批量操作监控"
    condition: "operation_type == 'UPDATE' AND rows_affected > 100"
    alert: true
    priority: medium
    
  # 关键表变更告警
  - name: "关键表监控"
    condition: "table_name IN ['users', 'orders', 'payments']"
    alert: true
    priority: high

# ==============================================
# 数据过滤配置
# ==============================================
filters:
  # 敏感字段脱敏
  mask_fields:
    - password
    - credit_card
    - phone
    - email
    - id_card
  
  # 忽略的操作
  ignore_operations:
    - "SELECT"  # 只监控数据变更，不监控查询
  
  # 忽略特定用户的操作
  ignore_users:
    - backup_user
    - replication_user
    - monitor_user

# ==============================================
# 扩展配置
# ==============================================
extensions:
  # 自定义处理器
  processors:
    - name: "data_validation"
      enabled: false
      config:
        validation_rules: "rules/validation.json"
    
    - name: "compliance_check"
      enabled: false
      config:
        compliance_standards: ["SOX", "GDPR"]

# ==============================================
# 示例使用说明
# ==============================================
# 1. 基础监控：监控指定数据库和表的变更
# 2. 告警通知：重要变更的邮件和Webhook通知
# 3. Web查看：通过Web界面查看变更历史
# 4. API接口：通过API获取变更数据
# 5. 规则配置：自定义监控和告警规则