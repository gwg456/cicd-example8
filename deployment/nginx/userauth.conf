# User Auth System Nginx Configuration
# 用户认证系统 Nginx 配置文件

# 上游后端服务器配置
upstream userauth_backend {
    # 可配置多个后端实例实现负载均衡
    server 127.0.0.1:8000 weight=1 max_fails=3 fail_timeout=30s;
    # server 127.0.0.1:8001 weight=1 max_fails=3 fail_timeout=30s;
    
    # 保持连接
    keepalive 32;
}

# 限制请求频率
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/s;

# 主服务器配置
server {
    listen 80;
    listen [::]:80;
    server_name your-domain.com www.your-domain.com;
    
    # 重定向到HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS 服务器配置
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name your-domain.com www.your-domain.com;
    
    # SSL 证书配置
    ssl_certificate /etc/ssl/certs/your-domain.com.pem;
    ssl_certificate_key /etc/ssl/private/your-domain.com.key;
    
    # SSL 安全配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # 安全头
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:;" always;
    
    # 静态文件根目录
    root /var/www/userauth/dist;
    index index.html;
    
    # Gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # 客户端最大上传大小
    client_max_body_size 10M;
    
    # 缓冲区设置
    client_body_buffer_size 128k;
    proxy_connect_timeout 90;
    proxy_send_timeout 90;
    proxy_read_timeout 90;
    proxy_buffer_size 4k;
    proxy_buffers 4 32k;
    proxy_busy_buffers_size 64k;
    proxy_temp_file_write_size 64k;
    
    # 静态文件缓存
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }
    
    # API 请求代理到后端
    location /api/ {
        # 请求频率限制
        limit_req zone=api_limit burst=20 nodelay;
        
        # 代理到后端
        proxy_pass http://userauth_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # 超时设置
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 缓存设置
        proxy_cache_bypass $http_upgrade;
        
        # 错误处理
        proxy_intercept_errors on;
        error_page 502 503 504 /api_error.html;
    }
    
    # 认证相关API加强限制
    location ~* ^/api/v1/auth/(login|register) {
        limit_req zone=auth_limit burst=5 nodelay;
        
        proxy_pass http://userauth_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 健康检查
    location /health {
        proxy_pass http://userauth_backend/health;
        proxy_set_header Host $host;
        access_log off;
    }
    
    # API 文档 (仅开发环境)
    location /docs {
        # 生产环境可以注释掉这个location块
        proxy_pass http://userauth_backend/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 可选：添加基础认证保护文档
        # auth_basic "API Documentation";
        # auth_basic_user_file /etc/nginx/.htpasswd;
    }
    
    # 前端路由 - SPA 支持
    location / {
        try_files $uri $uri/ /index.html;
        
        # 防止缓存 index.html
        location = /index.html {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
    }
    
    # API 错误页面
    location = /api_error.html {
        internal;
        root /var/www/userauth/error_pages;
    }
    
    # 隐藏 Nginx 版本
    server_tokens off;
    
    # 访问日志
    access_log /var/log/nginx/userauth_access.log combined;
    error_log /var/log/nginx/userauth_error.log warn;
}

# 默认服务器配置 - 拒绝未知域名
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    
    # 默认SSL证书 (可以使用自签名证书)
    ssl_certificate /etc/ssl/certs/default.pem;
    ssl_certificate_key /etc/ssl/private/default.key;
    
    server_name _;
    return 444;
}