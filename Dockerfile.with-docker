FROM python:3.12-slim

WORKDIR /app

# 安装Docker CLI（如果需要在容器内操作Docker）
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    gnupg \
    lsb-release \
    && mkdir -p /etc/apt/keyrings \
    && curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list \
    && apt-get update \
    && apt-get install -y --no-install-recommends docker-ce-cli \
    && rm -rf /var/lib/apt/lists/*

# 复制并安装Python依赖
COPY requirements.txt .
RUN pip install --upgrade pip --no-cache-dir \
    && pip install --no-cache-dir -r requirements.txt

# 复制应用代码
COPY config.py flow.py ./

# 设置环境变量（构建时可以覆盖）
ARG PREFECT_API_URL
ARG IMAGE_REPO
ARG IMAGE_TAG
ARG WORK_POOL_NAME=my-docker-pool2

# 将构建参数转换为环境变量
ENV PREFECT_API_URL=${PREFECT_API_URL} \
    IMAGE_REPO=${IMAGE_REPO} \
    IMAGE_TAG=${IMAGE_TAG} \
    WORK_POOL_NAME=${WORK_POOL_NAME} \
    PYTHONUNBUFFERED=1 \
    PREFECT_LOGGING_LEVEL=INFO

# 创建非root用户（安全最佳实践）
RUN useradd -m -u 1000 prefect && chown -R prefect:prefect /app
USER prefect

CMD ["python", "flow.py"]