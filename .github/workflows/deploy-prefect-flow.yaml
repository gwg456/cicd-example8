name: Deploy Prefect flow

on:
  push:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: samples28/cicd-example

jobs:
  deploy:
    name: Deploy
    runs-on: self-hosted
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Docker daemon for China mainland
        run: |
          # 配置Docker镜像加速器
          sudo mkdir -p /etc/docker
          echo '{
            "registry-mirrors": [
              "https://hub-mirror.c.163.com",
              "https://mirror.ccs.tencentyun.com",
              "https://docker.mirrors.ustc.edu.cn"
            ],
            "max-concurrent-downloads": 10,
            "max-concurrent-uploads": 5,
            "max-download-attempts": 5
          }' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker
          # 等待Docker重启完成
          sleep 10
          docker info

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.citoken }}

      - name: Set up Docker Buildx (inherit daemon config)
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker
          driver-opts: |
            default-load=true
          buildkitd-flags: |
            --allow-insecure-entitlement security.insecure
            --allow-insecure-entitlement network.host

      - name: Generate version tag
        id: version
        run: |
          echo "VERSION=v$(date +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          network: host
          load: true
        timeout-minutes: 20

      - name: Deploy using the built image
        run: |
          # 直接使用已构建的镜像执行部署，挂载Docker套接字
          docker run --rm \
            -e PREFECT_API_URL=${{ secrets.PREFECT_API_URL }} \
            -e IMAGE_REPO=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} \
            -e IMAGE_TAG=${{ steps.version.outputs.VERSION }} \
            -e WORK_POOL_NAME=my-docker-pool2 \
            -e DEPLOY_MODE=true \
            -v /var/run/docker.sock:/var/run/docker.sock \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}
        timeout-minutes: 10
